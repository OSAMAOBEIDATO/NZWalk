// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NZWalk.Api.Data;

#nullable disable

namespace NZWalk.Api.Migrations
{
    [DbContext(typeof(NZWalkDBContext))]
    [Migration("20240724211033_initial Model")]
    partial class initialModel
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("NZWalk.Api.Models.Domain.Difficalty", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("difficalties");
                });

            modelBuilder.Entity("NZWalk.Api.Models.Domain.Region", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("regionImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("regions");
                });

            modelBuilder.Entity("NZWalk.Api.Models.Domain.Walk", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("difficaltyid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("difficltyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("lengthInKm")
                        .HasColumnType("float");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("regionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("walkImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("difficaltyid");

                    b.HasIndex("regionId");

                    b.ToTable("walks");
                });

            modelBuilder.Entity("NZWalk.Api.Models.Domain.Walk", b =>
                {
                    b.HasOne("NZWalk.Api.Models.Domain.Difficalty", "difficalty")
                        .WithMany()
                        .HasForeignKey("difficaltyid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NZWalk.Api.Models.Domain.Region", "region")
                        .WithMany()
                        .HasForeignKey("regionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("difficalty");

                    b.Navigation("region");
                });
#pragma warning restore 612, 618
        }
    }
}
